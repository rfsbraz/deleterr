# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - "develop"

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
      
    steps:
    # Purges github badge cache
    - uses: kevincobain2000/action-camo-purge@v1
    
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python 3
      uses: actions/setup-python@v3
      with:
        python-version: "3"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock coverage
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        coverage run -m pytest -m "not integration"
        coverage report
        coverage xml
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  integration_tests:
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
    # Purges github badge cache
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python 3
      uses: actions/setup-python@v3
      with:
        python-version: "3"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        python -m pytest -m integration